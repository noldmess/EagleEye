<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="">
  <file path="sharing.php" hash="0ae374c58a7cf2bd1041f0e040a9e643" package="Default">
    <docblock line="3">
      <description>ownCloud - gallery application</description>
      <long-description></long-description>
      <tag line="3" name="author" description="Bartek Przybylski"/>
      <tag line="3" name="copyright" description="2012 Bartek Przybylski bartek@alefzero.eu&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Lesser General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
  </file>
  <file path="appinfo/app.php" hash="4183ecb7bd36994c4ac8d23ac7c9b7cc" package="Default">
    <docblock line="3">
      <description>ownCloud - facefinder</description>
      <long-description></long-description>
      <tag line="3" name="author" description="Aaron Messner"/>
      <tag line="3" name="copyright" description="2012 Aaron Messner aaron.messner@stuudent.uibk.ac.at&#10;a&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Lesser General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
  </file>
  <file path="appinfo/update.php" hash="4274174a424afbb6b3d92f735a3021d9" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file appinfo/update.php</error>
    </parse_markers>
  </file>
  <file path="index.php" hash="d9c84c0753c326367794b92b60bb359a" package="Default">
    <docblock line="3">
      <description>ownCloud - gallery application</description>
      <long-description></long-description>
      <tag line="3" name="author" description="Aaron Messner"/>
      <tag line="3" name="copyright" description="2012 Bartek Przybylski bartek@alefzero.eu&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Lesser General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
  </file>
  <file path="ajax/new_1.php" hash="00be0dabaf02d434d585d51dd48547cf" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file ajax/new_1.php</error>
    </parse_markers>
  </file>
  <file path="templates/no-image-app.php" hash="50049cd33bb5cbe96043c4b8a52129e8" package="Default">
    <docblock line="2">
      <description>Copyright (c) 2012 Bart Visscher &lt;bartv@thisnet.nl&gt;
This file is licensed under the Affero General Public License version 3 or
later.</description>
      <long-description>&lt;p&gt;See the COPYING-README file.&lt;/p&gt;</long-description>
    </docblock>
  </file>
  <file path="templates/index.php" hash="34da59352be9eb0733f6329038fcc0c2" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file templates/index.php</error>
    </parse_markers>
  </file>
  <file path="lib/sharing.php" hash="8298ed21b38f82dee39c17b52f21477a" package="Default">
    <class final="false" abstract="false" namespace="global" line="24" package="Default">
      <extends/>
      <name>OC_Gallery_Sharing</name>
      <full_name>\OC_Gallery_Sharing</full_name>
      <docblock line="3">
        <description>ownCloud - gallery application</description>
        <long-description></long-description>
        <tag line="3" name="author" description="Bartek Przybylski"/>
        <tag line="3" name="copyright" description="2012 Bartek Przybylski bartek@alefzero.eu&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Lesser General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="25" package="Default">
        <name>getEntries</name>
        <full_name>getEntries</full_name>
        <argument line="25">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="31" package="Default">
        <name>isTokenValid</name>
        <full_name>isTokenValid</full_name>
        <argument line="31">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="37" package="Default">
        <name>isRecursive</name>
        <full_name>isRecursive</full_name>
        <argument line="37">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="43" package="Default">
        <name>getTokenOwner</name>
        <full_name>getTokenOwner</full_name>
        <argument line="43">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="56" package="Default">
        <name>getPath</name>
        <full_name>getPath</full_name>
        <argument line="56">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="68" package="Default">
        <name>updateSharingByToken</name>
        <full_name>updateSharingByToken</full_name>
        <argument line="68">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$recursive</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="73" package="Default">
        <name>getEntryByAlbumId</name>
        <full_name>getEntryByAlbumId</full_name>
        <argument line="73">
          <name>$album_id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="78" package="Default">
        <name>addShared</name>
        <full_name>addShared</full_name>
        <argument line="78">
          <name>$token</name>
          <default></default>
          <type/>
        </argument>
        <argument line="78">
          <name>$albumId</name>
          <default></default>
          <type/>
        </argument>
        <argument line="78">
          <name>$recursive</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="84" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <argument line="84">
          <name>$albumId</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/sharing.php</error>
      <error line="25" code="50010">No DocBlock was found for method getEntries()</error>
      <error line="31" code="50010">No DocBlock was found for method isTokenValid()</error>
      <error line="37" code="50010">No DocBlock was found for method isRecursive()</error>
      <error line="43" code="50010">No DocBlock was found for method getTokenOwner()</error>
      <error line="56" code="50010">No DocBlock was found for method getPath()</error>
      <error line="68" code="50010">No DocBlock was found for method updateSharingByToken()</error>
      <error line="73" code="50010">No DocBlock was found for method getEntryByAlbumId()</error>
      <error line="78" code="50010">No DocBlock was found for method addShared()</error>
      <error line="84" code="50010">No DocBlock was found for method remove()</error>
    </parse_markers>
  </file>
  <file path="lib/share.php" hash="ae836f2553251b6334ca2c8c3b57f325" package="Default">
    <class final="false" abstract="true" namespace="global" line="22" package="Default">
      <extends/>
      <implements>\OCP\Share_Backend</implements>
      <name>OC_Share_Photo_Backend</name>
      <full_name>\OC_Share_Photo_Backend</full_name>
      <docblock line="2">
        <description>ownCloud</description>
        <long-description></long-description>
        <tag line="2" name="author" description="Michael Gapczynski"/>
        <tag line="2" name="copyright" description="2012 Michael Gapczynski mtgap@owncloud.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$dependsOn</name>
        <default>'file'</default>
      </property>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$supportedFileExtensions</name>
        <default>array('jpg', 'png', 'gif')</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="Default">
        <name>getSource</name>
        <full_name>getSource</full_name>
        <argument line="27">
          <name>$item</name>
          <default></default>
          <type/>
        </argument>
        <argument line="27">
          <name>$uid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Default">
        <name>generateTarget</name>
        <full_name>generateTarget</full_name>
        <argument line="31">
          <name>$item</name>
          <default></default>
          <type/>
        </argument>
        <argument line="31">
          <name>$uid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="31">
          <name>$exclude</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="Default">
        <name>formatItems</name>
        <full_name>formatItems</full_name>
        <argument line="36">
          <name>$items</name>
          <default></default>
          <type/>
        </argument>
        <argument line="36">
          <name>$format</name>
          <default></default>
          <type/>
        </argument>
        <argument line="36">
          <name>$parameters</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="32">Make sure target path doesn't exist already</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/share.php</error>
      <error line="24" code="50018">No DocBlock was found for property $dependsOn</error>
      <error line="25" code="50018">No DocBlock was found for property $supportedFileExtensions</error>
      <error line="27" code="50010">No DocBlock was found for method getSource()</error>
      <error line="31" code="50010">No DocBlock was found for method generateTarget()</error>
      <error line="36" code="50010">No DocBlock was found for method formatItems()</error>
    </parse_markers>
  </file>
  <file path="lib/managers.php" hash="7cea1b656fa5f6a963ac0d247ca08bcd" package="Default">
    <class final="false" abstract="false" namespace="OC\Pictures" line="5" package="Default">
      <extends/>
      <name>DatabaseManager</name>
      <full_name>\OC\Pictures\DatabaseManager</full_name>
      <constant namespace="OC\Pictures" line="8" package="Default">
        <name>TAG</name>
        <full_name>TAG</full_name>
        <value>'DatabaseManager'</value>
      </constant>
      <property final="false" static="true" visibility="private" line="6" namespace="OC\Pictures" package="Default">
        <name>$instance</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="7" namespace="OC\Pictures" package="Default">
        <name>$cache</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OC\Pictures" line="10" package="Default">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OC\Pictures" line="16" package="Default">
        <name>getPathData</name>
        <full_name>getPathData</full_name>
        <argument line="16">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OC\Pictures" line="28" package="Default">
        <name>setFileData</name>
        <full_name>setFileData</full_name>
        <argument line="28">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="28">
          <name>$width</name>
          <default></default>
          <type/>
        </argument>
        <argument line="28">
          <name>$height</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OC\Pictures" line="37" package="Default">
        <name>getFileData</name>
        <full_name>getFileData</full_name>
        <argument line="37">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="OC\Pictures" line="57" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="OC\Pictures" line="60" package="Default">
      <extends/>
      <name>ThumbnailsManager</name>
      <full_name>\OC\Pictures\ThumbnailsManager</full_name>
      <constant namespace="OC\Pictures" line="63" package="Default">
        <name>TAG</name>
        <full_name>TAG</full_name>
        <value>'ThumbnailManager'</value>
      </constant>
      <constant namespace="OC\Pictures" line="64" package="Default">
        <name>THUMBNAIL_HEIGHT</name>
        <full_name>THUMBNAIL_HEIGHT</full_name>
        <value>150</value>
      </constant>
      <property final="false" static="true" visibility="private" line="62" namespace="OC\Pictures" package="Default">
        <name>$instance</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OC\Pictures" line="66" package="Default">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OC\Pictures" line="72" package="Default">
        <name>getThumbnail</name>
        <full_name>getThumbnail</full_name>
        <argument line="72">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OC\Pictures" line="100" package="Default">
        <name>getThumbnailWidth</name>
        <full_name>getThumbnailWidth</full_name>
        <argument line="100">
          <name>$image</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OC\Pictures" line="104" package="Default">
        <name>getThumbnailInfo</name>
        <full_name>getThumbnailInfo</full_name>
        <argument line="104">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OC\Pictures" line="124" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <argument line="124">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="OC\Pictures" line="131" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/managers.php</error>
      <error line="5" code="50000">No DocBlock was found for \OC\Pictures\DatabaseManager</error>
      <error line="6" code="50018">No DocBlock was found for property $instance</error>
      <error line="7" code="50018">No DocBlock was found for property $cache</error>
      <error line="10" code="50010">No DocBlock was found for method getInstance()</error>
      <error line="16" code="50010">No DocBlock was found for method getPathData()</error>
      <error line="28" code="50010">No DocBlock was found for method setFileData()</error>
      <error line="37" code="50010">No DocBlock was found for method getFileData()</error>
      <error line="57" code="50010">No DocBlock was found for method __construct()</error>
      <error line="60" code="50000">No DocBlock was found for \OC\Pictures\ThumbnailsManager</error>
      <error line="62" code="50018">No DocBlock was found for property $instance</error>
      <error line="66" code="50010">No DocBlock was found for method getInstance()</error>
      <error line="72" code="50010">No DocBlock was found for method getThumbnail()</error>
      <error line="100" code="50010">No DocBlock was found for method getThumbnailWidth()</error>
      <error line="104" code="50010">No DocBlock was found for method getThumbnailInfo()</error>
      <error line="124" code="50010">No DocBlock was found for method delete()</error>
      <error line="131" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="lib/hooks_handlers.php" hash="9640bfb88da9ad634205a0079b82b539" package="Default">
    <class final="false" abstract="false" namespace="global" line="24" package="Default">
      <extends/>
      <name>OC_FaceFinder_Hooks_Handlers</name>
      <full_name>\OC_FaceFinder_Hooks_Handlers</full_name>
      <docblock line="3">
        <description>ownCloud - facefinder</description>
        <long-description></long-description>
        <tag line="3" name="author" description="Aaron Messner"/>
        <tag line="3" name="copyright" description="2012 Aaron Messner aaron.messner@stuudent.uibk.ac.at&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Lesser General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="31" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="26">
          <description>The function is used in case of the upladet of a file
The patamrter includes the name of the file;</description>
          <long-description></long-description>
          <tag line="26" name="param" description="" type="\" variable="$params"/>
        </docblock>
        <argument line="31">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="55" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="50">
          <description>The function is used in case of the delete of a file
The patamrter includes the name of the file;</description>
          <long-description></long-description>
          <tag line="50" name="param" description="" type="\" variable="$params"/>
        </docblock>
        <argument line="55">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="69" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="64">
          <description>The function is used in case of the update of a file
The patamrter includes the name of the file and the new fielname;</description>
          <long-description></long-description>
          <tag line="64" name="param" description="" type="\" variable="$params"/>
        </docblock>
        <argument line="69">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="83" package="Default">
        <name>isPhoto</name>
        <full_name>isPhoto</full_name>
        <docblock line="78">
          <description>Help funktien to check the file path no the type</description>
          <long-description></long-description>
          <tag line="78" name="param" description="" type="\" variable="$path"/>
          <tag line="78" name="return" description="true if is a 'jpg'" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/hooks_handlers.php</error>
    </parse_markers>
  </file>
  <file path="lib/scanner.php" hash="17f5da777ee541e6dee1ca2c0679803e" package="Default">
    <class final="false" abstract="false" namespace="global" line="24" package="Default">
      <extends/>
      <name>OC_Gallery_Scanner</name>
      <full_name>\OC_Gallery_Scanner</full_name>
      <docblock line="3">
        <description>ownCloud - gallery application</description>
        <long-description></long-description>
        <tag line="3" name="author" description="Bartek Przybylski"/>
        <tag line="3" name="copyright" description="2012 Bartek Przybylski &lt;bartek@alefzero.eu&gt;&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Lesser General Public&#10;License along with this library. If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="26" package="Default">
        <name>getGalleryRoot</name>
        <full_name>getGalleryRoot</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="29" package="Default">
        <name>getScanningRoot</name>
        <full_name>getScanningRoot</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="33" package="Default">
        <name>cleanUp</name>
        <full_name>cleanUp</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="37" package="Default">
        <name>createName</name>
        <full_name>createName</full_name>
        <argument line="37">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="43" package="Default">
        <name>scan</name>
        <full_name>scan</full_name>
        <argument line="43">
          <name>$eventSource</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="73" package="Default">
        <name>createThumbnails</name>
        <full_name>createThumbnails</full_name>
        <argument line="73">
          <name>$albumName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$files</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="89" package="Default">
        <name>createIntermediateAlbums</name>
        <full_name>createIntermediateAlbums</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="116" package="Default">
        <name>isPhoto</name>
        <full_name>isPhoto</full_name>
        <argument line="116">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="121" package="Default">
        <name>findFiles</name>
        <full_name>findFiles</full_name>
        <argument line="121">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="130" package="Default">
        <name>findPaths</name>
        <full_name>findPaths</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/scanner.php</error>
      <error line="26" code="50010">No DocBlock was found for method getGalleryRoot()</error>
      <error line="29" code="50010">No DocBlock was found for method getScanningRoot()</error>
      <error line="33" code="50010">No DocBlock was found for method cleanUp()</error>
      <error line="37" code="50010">No DocBlock was found for method createName()</error>
      <error line="43" code="50010">No DocBlock was found for method scan()</error>
      <error line="73" code="50010">No DocBlock was found for method createThumbnails()</error>
      <error line="89" code="50010">No DocBlock was found for method createIntermediateAlbums()</error>
      <error line="116" code="50010">No DocBlock was found for method isPhoto()</error>
      <error line="121" code="50010">No DocBlock was found for method findFiles()</error>
      <error line="130" code="50010">No DocBlock was found for method findPaths()</error>
    </parse_markers>
  </file>
  <file path="lib/photo.php" hash="a854a991de00f78d31365aa803c75d15" package="Default">
    <include line="2" type="Require Once" package="Default">
      <name>moduleinterface.php</name>
    </include>
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <implements>\OC_Module_Interface</implements>
      <name>OC_FaceFinder_Photo</name>
      <full_name>\OC_FaceFinder_Photo</full_name>
      <property final="false" static="false" visibility="private" line="5" namespace="global" package="Default">
        <name>$paht</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="6" namespace="global" package="Default">
        <name>$version</name>
        <default>'0.0.1'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="12" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag line="8" name="param" description="the $paht in the facefinder tabel in the db" type="\Insert" variable="$paht">
            <type by_reference="false">\Insert</type>
          </tag>
        </docblock>
        <argument line="12">
          <name>$paht</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Default">
        <name>getID</name>
        <full_name>getID</full_name>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag line="22" name="return" description="the primary key sql table" type="\return">
            <type by_reference="false">\return</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <argument line="50">
          <name>$newpaht</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="Default">
        <name>search</name>
        <full_name>search</full_name>
        <argument line="59">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="Default">
        <name>equivalent</name>
        <full_name>equivalent</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Default">
        <name>setForingKey</name>
        <full_name>setForingKey</full_name>
        <argument line="73">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="79" package="Default">
        <name>initialiseDB</name>
        <full_name>initialiseDB</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/photo.php</error>
      <error line="3" code="50000">No DocBlock was found for \OC_FaceFinder_Photo</error>
      <error line="5" code="50018">No DocBlock was found for property $paht</error>
      <error line="6" code="50018">No DocBlock was found for property $version</error>
      <error line="8" code="50012">No short description for method __construct()</error>
      <error line="16" code="50010">No DocBlock was found for method insert()</error>
      <error line="22" code="50012">No short description for method getID()</error>
      <error line="37" code="50010">No DocBlock was found for method remove()</error>
      <error line="50" code="50010">No DocBlock was found for method update()</error>
      <error line="59" code="50010">No DocBlock was found for method search()</error>
      <error line="66" code="50010">No DocBlock was found for method equivalent()</error>
      <error line="73" code="50010">No DocBlock was found for method setForingKey()</error>
      <error line="79" code="50010">No DocBlock was found for method initialiseDB()</error>
    </parse_markers>
  </file>
  <file path="lib/modulemaneger.php" hash="35ecb2d8add091f0cd0684c170bf5246" package="Default">
    <include line="56" type="Include Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="25" package="Default">
      <extends/>
      <name>OC_Module_Maneger</name>
      <full_name>\OC_Module_Maneger</full_name>
      <docblock line="2">
        <description>ownCloud - faceFinder application</description>
        <long-description></long-description>
        <tag line="2" name="author" description="Aaron Messner"/>
        <tag line="2" name="copyright" description="2012 Aaron Messner aaron.messner@stuudent.uibk.ac.at&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&#9;See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Lesser General Public&#10;License along with this library.&#9;If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="26" namespace="global" package="Default">
        <name>$ModuleClass</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag line="33" name="todo" description="make initialise"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="54" package="Default">
        <name>checkCorrectModuleClass</name>
        <full_name>checkCorrectModuleClass</full_name>
        <docblock line="49">
          <description>The funktion trialled if the Class implements the 'OC_Module_Interface' interface
and the classname is identikal to the filaname</description>
          <long-description></long-description>
          <tag line="49" name="param" description="Path to the class to check $classPath" type="\the" variable="$classPath">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$classPath</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="Default">
        <name>getCorrectFolderName</name>
        <full_name>getCorrectFolderName</full_name>
        <docblock line="75">
          <description></description>
          <long-description></long-description>
          <tag line="75" name="todo" description="fine correkt folder name"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="Default">
        <name>getModulsOfFolder</name>
        <full_name>getModulsOfFolder</full_name>
        <docblock line="93">
          <description>The funktien need the path to the module folder</description>
          <long-description></long-description>
          <tag line="93" name="param" description="" type="\Path" variable="$modulpath">
            <type by_reference="false">\Path</type>
          </tag>
          <tag line="93" name="return" description="of filenams or null in case the forder not exist &lt;NULL, multitype:filename &gt;" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$modulpath</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="Default">
        <name>getModuleClass</name>
        <full_name>getModuleClass</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="134" package="Default">
        <name>getClassName</name>
        <full_name>getClassName</full_name>
        <docblock line="129">
          <description>Funktioen get the path to a file and returns t</description>
          <long-description></long-description>
          <tag line="129" name="param" description="" type="\" variable="$classPath"/>
          <tag line="129" name="return" description="" type="\filename">
            <type by_reference="false">\filename</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$classPath</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/modulemaneger.php</error>
      <error line="26" code="50018">No DocBlock was found for property $ModuleClass</error>
      <error line="33" code="50012">No short description for method __construct()</error>
      <error line="75" code="50012">No short description for method getCorrectFolderName()</error>
      <error line="125" code="50010">No DocBlock was found for method getModuleClass()</error>
    </parse_markers>
  </file>
  <file path="lib/images_utils.php" hash="d07e3d1b258fa92ec044e19a343d4d71" package="Default">
    <docblock line="3">
      <description>ownCloud - gallery application</description>
      <long-description></long-description>
      <tag line="3" name="author" description="Bartek Przybylski"/>
      <tag line="3" name="copyright" description="2012 Bartek Przybylski bart.p.pl@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Lesser General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <function namespace="global" line="27" package="Default">
      <name>CroppedThumbnail</name>
      <full_name>\CroppedThumbnail</full_name>
      <argument line="27">
        <name>$imgSrc</name>
        <default></default>
        <type/>
      </argument>
      <argument line="27">
        <name>$thumbnail_width</name>
        <default></default>
        <type/>
      </argument>
      <argument line="27">
        <name>$thumbnail_height</name>
        <default></default>
        <type/>
      </argument>
      <argument line="27">
        <name>$tgtImg</name>
        <default></default>
        <type/>
      </argument>
      <argument line="27">
        <name>$shift</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="27" code="50009">No DocBlock was found for function \CroppedThumbnail()</error>
    </parse_markers>
  </file>
  <file path="lib/moduleinterface.php" hash="e9bc2b90085fdcaae03c8047a5bdef71" package="Default">
    <interface namespace="global" line="23" package="Default">
      <name>OC_Module_Interface</name>
      <full_name>\OC_Module_Interface</full_name>
      <docblock line="3">
        <description>ownCloud - facefinder</description>
        <long-description></long-description>
        <tag line="3" name="author" description="Aaron Messner"/>
        <tag line="3" name="copyright" description="2012 Aaron Messner aaron.messner@stuudent.uibk.ac.at&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Lesser General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="24">
          <description>for the construction of the class you need the path</description>
          <long-description></long-description>
          <tag line="24" name="param" description="" type="\unknown_type" variable="$paht">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="29">
          <description>Insert the data in the module DB</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="33">
          <description>Remove the data in the module DB</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="37">
          <description>Update the data in the module DB</description>
          <long-description></long-description>
        </docblock>
        <argument line="40">
          <name>$newpaht</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Default">
        <name>search</name>
        <full_name>search</full_name>
        <argument line="41">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Default">
        <name>getID</name>
        <full_name>getID</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Default">
        <name>equivalent</name>
        <full_name>equivalent</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Default">
        <name>setForingKey</name>
        <full_name>setForingKey</full_name>
        <argument line="44">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="48" package="Default">
        <name>initialiseDB</name>
        <full_name>initialiseDB</full_name>
        <docblock line="45">
          <description>Create the DB of the Module the if the module hase an new Version numper</description>
          <long-description></long-description>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/moduleinterface.php</error>
      <error line="24" code="50014">Name of argument $path does not match with the DocBlock's name $paht in __construct()</error>
      <notice line="24" code="50013">Parameter $paht could not be found in __construct()</notice>
      <error line="37" code="50015">Argument $newpaht is missing from the Docblock of update()</error>
      <error line="41" code="50010">No DocBlock was found for method search()</error>
      <error line="42" code="50010">No DocBlock was found for method getID()</error>
      <error line="43" code="50010">No DocBlock was found for method equivalent()</error>
      <error line="44" code="50010">No DocBlock was found for method setForingKey()</error>
    </parse_markers>
  </file>
  <file path="tests/test.php" hash="d2b35d9b101b935acbc6ec5317f9eefe" package="Default">
    <class final="false" abstract="false" namespace="global" line="6" package="Default">
      <extends>\UnitTestCase</extends>
      <name>HelloWorld</name>
      <full_name>\HelloWorld</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>testWeGetOnePass</name>
        <full_name>testWeGetOnePass</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file tests/test.php</error>
      <error line="6" code="50000">No DocBlock was found for \HelloWorld</error>
      <error line="8" code="50010">No DocBlock was found for method testWeGetOnePass()</error>
    </parse_markers>
  </file>
  <file path="tests/TestSuiteXml.php" hash="0525742a6e9b00599affda0e396050a0" package="Default">
    <include line="2" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="3" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="4" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="5" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="10" package="Default">
      <extends>\TestSuite</extends>
      <name>AllTests</name>
      <full_name>\AllTests</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="11" package="Default">
        <name>AllTests</name>
        <full_name>AllTests</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file tests/TestSuiteXml.php</error>
      <error line="10" code="50000">No DocBlock was found for \AllTests</error>
      <error line="11" code="50010">No DocBlock was found for method AllTests()</error>
    </parse_markers>
  </file>
  <file path="tests/EXIF_module_test.php" hash="bd28f809465ccb15c5b27d452d21d876" package="Default">
    <include line="2" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="4" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="6" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="7" package="Default">
      <extends>\UnitTestCase</extends>
      <name>TestOfEXIF_modul</name>
      <full_name>\TestOfEXIF_modul</full_name>
      <property final="false" static="false" visibility="private" line="9" namespace="global" package="Default">
        <name>$photoclass</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="10" namespace="global" package="Default">
        <name>$path</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="11" namespace="global" package="Default">
        <name>$id</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="13" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="Default">
        <name>testgetExitHeader</name>
        <full_name>testgetExitHeader</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Default">
        <name>getDateOfEXIF</name>
        <full_name>getDateOfEXIF</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file tests/EXIF_module_test.php</error>
      <error line="7" code="50000">No DocBlock was found for \TestOfEXIF_modul</error>
      <error line="9" code="50018">No DocBlock was found for property $photoclass</error>
      <error line="10" code="50018">No DocBlock was found for property $path</error>
      <error line="11" code="50018">No DocBlock was found for property $id</error>
      <error line="13" code="50010">No DocBlock was found for method __construct()</error>
      <error line="24" code="50010">No DocBlock was found for method testgetExitHeader()</error>
      <error line="34" code="50010">No DocBlock was found for method getDateOfEXIF()</error>
    </parse_markers>
  </file>
  <file path="tests/testmodul/moduletest_notcorrektclass.php" hash="97c6f9cfa5e9ee59078bdb6287041e22" package="Default">
    <class final="false" abstract="false" namespace="global" line="2" package="Default">
      <extends/>
      <implements>\OC_Module_Interface</implements>
      <name>moduletest_notcorrektclasserror</name>
      <full_name>\moduletest_notcorrektclasserror</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="4">
          <description>for the construction of the class you need the path</description>
          <long-description></long-description>
          <tag line="4" name="param" description="" type="\unknown_type" variable="$paht">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="8">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="12" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="9">
          <description>Insert the data in the module DB</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="13">
          <description>Remove the data in the module DB</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="17">
          <description>Update the data in the module DB</description>
          <long-description></long-description>
        </docblock>
        <argument line="20">
          <name>$newpaht</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="Default">
        <name>search</name>
        <full_name>search</full_name>
        <argument line="21">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="Default">
        <name>getID</name>
        <full_name>getID</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="Default">
        <name>equivalent</name>
        <full_name>equivalent</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="Default">
        <name>setForingKey</name>
        <full_name>setForingKey</full_name>
        <argument line="24">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="28" package="Default">
        <name>initialiseDB</name>
        <full_name>initialiseDB</full_name>
        <docblock line="25">
          <description>Create the DB of the Module the if the module hase an new Version numper</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file tests/testmodul/moduletest_notcorrektclass.php</error>
      <error line="2" code="50000">No DocBlock was found for \moduletest_notcorrektclasserror</error>
      <error line="4" code="50014">Name of argument $path does not match with the DocBlock's name $paht in __construct()</error>
      <notice line="4" code="50013">Parameter $paht could not be found in __construct()</notice>
      <error line="17" code="50015">Argument $newpaht is missing from the Docblock of update()</error>
      <error line="21" code="50010">No DocBlock was found for method search()</error>
      <error line="22" code="50010">No DocBlock was found for method getID()</error>
      <error line="23" code="50010">No DocBlock was found for method equivalent()</error>
      <error line="24" code="50010">No DocBlock was found for method setForingKey()</error>
    </parse_markers>
  </file>
  <file path="tests/testmodul/moduletest_interface.php" hash="b6db6233fc701f100b78278a2c3f21c1" package="Default">
    <class final="false" abstract="false" namespace="global" line="2" package="Default">
      <extends/>
      <implements>\OC_Module_Interface</implements>
      <name>moduletest_interface</name>
      <full_name>\moduletest_interface</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="4">
          <description>for the construction of the class you need the path</description>
          <long-description></long-description>
          <tag line="4" name="param" description="" type="\unknown_type" variable="$paht">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="8">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="12" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="9">
          <description>Insert the data in the module DB</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="13">
          <description>Remove the data in the module DB</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="17">
          <description>Update the data in the module DB</description>
          <long-description></long-description>
        </docblock>
        <argument line="20">
          <name>$newpaht</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="Default">
        <name>search</name>
        <full_name>search</full_name>
        <argument line="21">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="Default">
        <name>getID</name>
        <full_name>getID</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="Default">
        <name>equivalent</name>
        <full_name>equivalent</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="Default">
        <name>setForingKey</name>
        <full_name>setForingKey</full_name>
        <argument line="24">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="28" package="Default">
        <name>initialiseDB</name>
        <full_name>initialiseDB</full_name>
        <docblock line="25">
          <description>Create the DB of the Module the if the module hase an new Version numper</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file tests/testmodul/moduletest_interface.php</error>
      <error line="2" code="50000">No DocBlock was found for \moduletest_interface</error>
      <error line="4" code="50014">Name of argument $path does not match with the DocBlock's name $paht in __construct()</error>
      <notice line="4" code="50013">Parameter $paht could not be found in __construct()</notice>
      <error line="17" code="50015">Argument $newpaht is missing from the Docblock of update()</error>
      <error line="21" code="50010">No DocBlock was found for method search()</error>
      <error line="22" code="50010">No DocBlock was found for method getID()</error>
      <error line="23" code="50010">No DocBlock was found for method equivalent()</error>
      <error line="24" code="50010">No DocBlock was found for method setForingKey()</error>
    </parse_markers>
  </file>
  <file path="tests/testmodul/moduletest_nointerface.php" hash="f9b3ef985308bba752e7078fb8609362" package="Default">
    <class final="false" abstract="false" namespace="global" line="2" package="Default">
      <extends/>
      <name>moduletest_nointerface</name>
      <full_name>\moduletest_nointerface</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="4">
          <description>for the construction of the class you need the path</description>
          <long-description></long-description>
          <tag line="4" name="param" description="" type="\unknown_type" variable="$paht">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="8">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="12" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="9">
          <description>Insert the data in the module DB</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="13">
          <description>Remove the data in the module DB</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="17">
          <description>Update the data in the module DB</description>
          <long-description></long-description>
        </docblock>
        <argument line="20">
          <name>$newpaht</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="Default">
        <name>search</name>
        <full_name>search</full_name>
        <argument line="21">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="Default">
        <name>getID</name>
        <full_name>getID</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="Default">
        <name>equivalent</name>
        <full_name>equivalent</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="Default">
        <name>setForingKey</name>
        <full_name>setForingKey</full_name>
        <argument line="24">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="28" package="Default">
        <name>initialiseDB</name>
        <full_name>initialiseDB</full_name>
        <docblock line="25">
          <description>Create the DB of the Module the if the module hase an new Version numper</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file tests/testmodul/moduletest_nointerface.php</error>
      <error line="2" code="50000">No DocBlock was found for \moduletest_nointerface</error>
      <error line="4" code="50014">Name of argument $path does not match with the DocBlock's name $paht in __construct()</error>
      <notice line="4" code="50013">Parameter $paht could not be found in __construct()</notice>
      <error line="17" code="50015">Argument $newpaht is missing from the Docblock of update()</error>
      <error line="21" code="50010">No DocBlock was found for method search()</error>
      <error line="22" code="50010">No DocBlock was found for method getID()</error>
      <error line="23" code="50010">No DocBlock was found for method equivalent()</error>
      <error line="24" code="50010">No DocBlock was found for method setForingKey()</error>
    </parse_markers>
  </file>
  <file path="tests/modulemanegment_test.php" hash="b99202a93403c050d896695f81acead5" package="Default">
    <include line="3" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="4" package="Default">
      <extends>\UnitTestCase</extends>
      <name>TestOfModuleManeger</name>
      <full_name>\TestOfModuleManeger</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>testgetClassName</name>
        <full_name>testgetClassName</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>testgetModulsOfFolder</name>
        <full_name>testgetModulsOfFolder</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Default">
        <name>testcheckCorrectModuleClass</name>
        <full_name>testcheckCorrectModuleClass</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file tests/modulemanegment_test.php</error>
      <error line="4" code="50000">No DocBlock was found for \TestOfModuleManeger</error>
      <error line="8" code="50010">No DocBlock was found for method testgetClassName()</error>
      <error line="16" code="50010">No DocBlock was found for method testgetModulsOfFolder()</error>
      <error line="26" code="50010">No DocBlock was found for method testcheckCorrectModuleClass()</error>
    </parse_markers>
  </file>
  <file path="tests/TestSuite.php" hash="684dc8d33df01b1a695a63f19699a9ae" package="Default">
    <include line="2" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="5" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="8" package="Default">
      <extends>\TestSuite</extends>
      <name>AllTests</name>
      <full_name>\AllTests</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="9" package="Default">
        <name>AllTests</name>
        <full_name>AllTests</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file tests/TestSuite.php</error>
      <error line="8" code="50000">No DocBlock was found for \AllTests</error>
      <error line="9" code="50010">No DocBlock was found for method AllTests()</error>
    </parse_markers>
  </file>
  <file path="tests/photo_test.php" hash="7ca307916af5989e2e2534174c911bd3" package="Default">
    <include line="2" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\UnitTestCase</extends>
      <name>TestOfPhoto</name>
      <full_name>\TestOfPhoto</full_name>
      <property final="false" static="false" visibility="private" line="11" namespace="global" package="Default">
        <name>$photoclass</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="12" namespace="global" package="Default">
        <name>$path</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="13" namespace="global" package="Default">
        <name>$id</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="6" package="Default">
        <name>testWeGetOnePass</name>
        <full_name>testWeGetOnePass</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="14" package="Default">
        <name>getNumnberResult</name>
        <full_name>getNumnberResult</full_name>
        <argument line="14">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Default">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="Default">
        <name>testinsert</name>
        <full_name>testinsert</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Default">
        <name>testgetid</name>
        <full_name>testgetid</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Default">
        <name>testupdate</name>
        <full_name>testupdate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="Default">
        <name>testremove</name>
        <full_name>testremove</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file tests/photo_test.php</error>
      <error line="3" code="50000">No DocBlock was found for \TestOfPhoto</error>
      <error line="11" code="50018">No DocBlock was found for property $photoclass</error>
      <error line="12" code="50018">No DocBlock was found for property $path</error>
      <error line="13" code="50018">No DocBlock was found for property $id</error>
      <error line="6" code="50010">No DocBlock was found for method testWeGetOnePass()</error>
      <error line="14" code="50010">No DocBlock was found for method getNumnberResult()</error>
      <error line="25" code="50010">No DocBlock was found for method __construct()</error>
      <error line="32" code="50010">No DocBlock was found for method __destruct()</error>
      <error line="36" code="50010">No DocBlock was found for method testinsert()</error>
      <error line="44" code="50010">No DocBlock was found for method testgetid()</error>
      <error line="49" code="50010">No DocBlock was found for method testupdate()</error>
      <error line="59" code="50010">No DocBlock was found for method testremove()</error>
    </parse_markers>
  </file>
  <file path="module/EXIF_Module.php" hash="f51e6f39325755277acb8728946d2629" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <implements>\OC_Module_Interface</implements>
      <name>EXIF_Module</name>
      <full_name>\EXIF_Module</full_name>
      <property final="false" static="false" visibility="private" line="5" namespace="global" package="Default">
        <name>$paht</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="6" namespace="global" package="Default">
        <name>$version</name>
        <default>'0.0.2'</default>
      </property>
      <property final="false" static="false" visibility="private" line="7" namespace="global" package="Default">
        <name>$ForingKey</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="private" line="8" namespace="global" package="Default">
        <name>$exif</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="9" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="9">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="13" package="Default">
        <name>getVersion</name>
        <full_name>getVersion</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="16">
          <description>Insert the exif data in the EXIF module Table in the db
If there is no "DateTimeOriginal" the "FileDateTime" will be  insert</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>getID</name>
        <full_name>getID</full_name>
        <docblock line="34">
          <description></description>
          <long-description></long-description>
          <tag line="34" name="return" description="the primary key sql table" type="\return">
            <type by_reference="false">\return</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="Default">
        <name>getExitHeader</name>
        <full_name>getExitHeader</full_name>
        <docblock line="42">
          <description>the funktion extract  the exif data of an image</description>
          <long-description></long-description>
          <tag line="42" name="param" description="to the image $paht" type="\Path" variable="$path">
            <type by_reference="false">\Path</type>
          </tag>
          <tag line="42" name="return" description="array or NULL if no EXIF header" type="\EXIF">
            <type by_reference="false">\EXIF</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Default">
        <name>getDateOfEXIF</name>
        <full_name>getDateOfEXIF</full_name>
        <docblock line="56">
          <description>Function return date of image</description>
          <long-description></long-description>
          <tag line="56" name="param" description="array $exifheader" type="\EXIF" variable="$exifheader">
            <type by_reference="false">\EXIF</type>
          </tag>
          <tag line="56" name="return" description="of Image If there is no &quot;DateTimeOriginal&quot; the &quot;FileDateTime&quot; will be  used" type="\Date">
            <type by_reference="false">\Date</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$exifheader</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="86" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <argument line="86">
          <name>$newpaht</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="Default">
        <name>search</name>
        <full_name>search</full_name>
        <argument line="93">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="Default">
        <name>equivalent</name>
        <full_name>equivalent</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Default">
        <name>setForingKey</name>
        <full_name>setForingKey</full_name>
        <docblock line="106">
          <description>Uset to set the ForingKey for the module tables</description>
          <long-description></long-description>
          <tag line="106" name="param" description="" type="\ForingKey" variable="$key">
            <type by_reference="false">\ForingKey</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="117" package="Default">
        <name>createDBtabels</name>
        <full_name>createDBtabels</full_name>
        <docblock line="113">
          <description>Help Funktioen to create  module DB Tables</description>
          <long-description></long-description>
          <tag line="113" name="param" description="of $classname" type="String" variable="$classname">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$classname</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="128" package="Default">
        <name>initialiseDB</name>
        <full_name>initialiseDB</full_name>
        <docblock line="125">
          <description>Create the DB of the Module the if the module hase an new Version numper</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file module/EXIF_Module.php</error>
      <error line="3" code="50000">No DocBlock was found for \EXIF_Module</error>
      <error line="5" code="50018">No DocBlock was found for property $paht</error>
      <error line="6" code="50018">No DocBlock was found for property $version</error>
      <error line="7" code="50018">No DocBlock was found for property $ForingKey</error>
      <error line="8" code="50018">No DocBlock was found for property $exif</error>
      <error line="9" code="50010">No DocBlock was found for method __construct()</error>
      <error line="13" code="50010">No DocBlock was found for method getVersion()</error>
      <error line="34" code="50012">No short description for method getID()</error>
      <error line="80" code="50010">No DocBlock was found for method remove()</error>
      <error line="86" code="50010">No DocBlock was found for method update()</error>
      <error line="93" code="50010">No DocBlock was found for method search()</error>
      <error line="100" code="50010">No DocBlock was found for method equivalent()</error>
    </parse_markers>
  </file>
  <file path="l10n/de.php" hash="713cfb26a4dd987f6df56bc205231592" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file l10n/de.php</error>
    </parse_markers>
  </file>
  <file path="l10n/de_DE.php" hash="713cfb26a4dd987f6df56bc205231592" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file l10n/de_DE.php</error>
    </parse_markers>
  </file>
  <file path="l10n/it.php" hash="92e90d7d35861842674ab70b5536322a" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file l10n/it.php</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <namespace name="OC" full_name="OC">
    <namespace name="Pictures" full_name="OC\Pictures"/>
  </namespace>
  <namespace name="global" full_name="global"/>
  <marker count="3">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
